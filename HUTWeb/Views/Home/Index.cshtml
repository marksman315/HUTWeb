@using HUTModels;
@using HUTWeb.Models;
@model HomeModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Home Use Tracker";
}

<div>
    <label id="CurrentDateTime" class="CurrentDateTime"></label>
</div>

<div class="row">
    <div class="col-md-4">
        @using (Html.BeginForm())
        {
            @Html.DropDownListFor(x => x.Persons, Model.Persons, new { @class = "dropdown" })

            <div>
                <br />
                @Html.TextBox("Weight", null, new { @id = "weightId", @type = "number" })

                <button class="btn btn-info" onclick="addWeight()" type="button">Add Weight</button>
            </div>
            <br />
            <div>
                @Html.TextBox("Calories", null, new { @id = "CalorieCountId", @type = "number" })

                <button class="btn btn-success" onclick="addCalories()" type="button">Add Calories</button>

                <div id="totalCalories">
                    <br />
                </div>
            </div>
            <br />
            <div>
                <button class="btn btn-warning" onclick="getWeightsForLastThirtyDays()" type="button">Get Weights for Last 30 Days</button>
            </div>
            <br />
            <div>
                <button class="btn btn-warning" onclick="getCaloriesForLastThirtyDays()" type="button">Get Calories for Last 30 Days</button>
            </div>
        }
    </div>
      
    <div class="col-md-8">
        <canvas id="myWeightChart" width="400" height="300"></canvas>
        <canvas id="myCalorieChart" width="400" height="300"></canvas>
    </div>
</div>



<script type="text/javascript">
    $('document').ready(function () {

        @* makes sure we get the local time according to where the browser is running *@
        var setTime = function () {
            var m = new Date();
            var dateString = $.format.date(m, "MM/dd/yyyy HH:mm");

            $(".CurrentDateTime").text(dateString);
        }

        setTime();

        @* refresh clock every minute *@
        setInterval(setTime, 60000);

        getWeightsForLastThirtyDays();
    })

    function addWeight() {
        var p = $("#Persons :selected").val();
        var wv = $("#weightId").val();
        var ct = $(".CurrentDateTime").text();

        var json = {
            personId: p,
            weightValue: wv,
            currentDateTime: ct
        };

        $.ajax({
            url: "@Url.Action("RecordWeight", "Home")",
            dataType: "json",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(json),
            async: true,
            processData: false,
            cache: false,
            success: function (data) {
                alert(data);
            }
        })
    }

    function addCalories() {
        var p = $("#Persons :selected").val();
        var cv = $("#CalorieCountId").val();
        var ct = $(".CurrentDateTime").text();

        var json = {
            personId: p,
            calorieValue: cv,
            currentDateTime: ct
        };

        $.ajax({
            url: "@Url.Action("RecordCalories", "Home")",
            dataType: "json",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(json),
            async: true,
            processData: false,
            cache: false,
            success: function (data) {
                $('#totalCalories').html(data);
            }
        })
    }



    function getWeightsForLastThirtyDays() {
        var p = $("#Persons :selected").val();
        var ct = $(".CurrentDateTime").text();

        var json = {
            personId: p,
            currentDateTime: ct
        };

        $.ajax({
            url: "@Url.Action("GetWeightForLastThirtyDays", "Home")",
            dataType: "json",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(json),
            async: true,
            processData: false,
            cache: false,
            success: function (data) {
                populateWeightChart(data);
            }
        })
    }

    function populateWeightChart(data) {        
        var ctx = document.getElementById('myWeightChart').getContext('2d');

        var allXValues = []; // create array here
        $.each(data, function (index, value) {
            allXValues.push(value.x); //push values here
        });

        var allYValues = []; // create array here
        $.each(data, function (index, value) {
            allYValues.push(value.y); //push values here
        });

        var chart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: allXValues,
                datasets: [{
                    label: "Weight",
                    backgroundColor: 'rgb(255, 99, 132)',
                    borderColor: 'rgb(255, 99, 132)',
                    data: allYValues,
                }]
            },

            options: {
                scales: {
                    xAxes: [{
                        time: {
                            unit: "day"
                        }
                    }]
                }
            }

        });
    }


    function getCaloriesForLastThirtyDays() {
        var p = $("#Persons :selected").val();
        var ct = $(".CurrentDateTime").text();

        var json = {
            personId: p,
            currentDateTime: ct
        };

        $.ajax({
            url: "@Url.Action("GetCaloriesForLastThirtyDays", "Home")",
            dataType: "json",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(json),
            async: true,
            processData: false,
            cache: false,
            success: function (data) {
                populateCalorieChart(data);
            }
        })
    }

    function populateCalorieChart(data) {
        var ctx = document.getElementById('myCalorieChart').getContext('2d');

        var allXValues = []; // create array here
        $.each(data, function (index, value) {
            allXValues.push(value.x); //push values here
        });

        var allYValues = []; // create array here
        $.each(data, function (index, value) {
            allYValues.push(value.y); //push values here
        });

        var chart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: allXValues,
                datasets: [{
                    label: "Calories",
                    //backgroundColor: 'rgb(37, 165, 14)',
                    backgroundColor: calorieColor(allYValues),
                    borderColor: 'rgb(37, 165, 14)',
                    data: allYValues,
                }]
            },

            options: {
                scales: {
                    xAxes: [{
                        time: {
                            unit: "day"
                        }
                    }]
                }
            }

        });
    }

    function calorieColor(allYValues) {
        var colors = [];

        for (var i = 0; i < allYValues.length; i++) {
            if (allYValues[i] === "2000") {
                colors.push('rgb(216, 12, 8)');            
            } else {
                colors.push('rgb(37, 165, 14)');
            }
        }

        return colors;
    }

</script>

